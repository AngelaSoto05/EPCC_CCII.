/*
Ejercicio
Producto máximo de dos números en una secuencia
• Dada una secuencia de n números no negativos y mayores que cero. • El objetivo es encontrar el mayor número que se pueda obtener
multiplicando dos números
*/

#include<iostream>
using namespace std;

int max_product(int num){
    if(num>0){
        int order[num],aux,high;

        //Para automatizar la lista, agregue "rand()" para asignar valores a los elementos de la lista.
        for(int i{0};i<num;i++){
            //Aqui defino el rango del rand()
            order[i] = rand();
            //rand() asignara a order[i] un numero aleatorio entre 0 a 1000
            order[i] = rand()%num;
            //Output of list order[i]
            cout<<order[i]<<"\t";
        }
        cout<<endl;

        for(int i{1};i<=num;i++){
            for(int j{num};j>=i;j--){
            //Para el ordenamiento usa el metodo Burbuja
                if(order[j-1]>order[j]){
                    aux = order[j-1];
                    order[j-1] = order[j];
                    order[j] = aux;
                }
            }
        }
        //Output of the two bigger numbers
        cout<<"The two bigger numbers are:\n";
        cout<<"1: "<<order[num-1]<<"\n";
        cout<<"2: "<<order[num-2]<<"\n";
        high = order[num-1]*order[num-2];
        //Output of the max product
        cout<<"the maximum product is: "<<high;
    }
    else
        cout<<"El number is zero(0) or is negative ";
}

int main()
{
    int num;
    cout<<"|||\t EXERCISE \t|||\n";
    cout<<"1. Maximum product\n";
    //Declaration of the size of the sequence 'n'
    cout<<"Tamanio de la lista: ";cin>>num;
    //Data output
    max_product(num);

}
/*
//Exercise: Print a multiplication table, since 1-10

#include<iostream>
using namespace std;

//Multiplication table function
int multiplication(int num)
{
    cout<<"|||      Multiplication Table    |||"<<endl;
    for(int i{1};i<=10;i++){
        for(int j{1};j<=10;j++){
            cout<<"|"<<i*j<<"\t";
        }
        cout<<endl;
    }
}

int main()
{
    cout<<"|||\t EXERCISE \t|||\n";
    cout<<"2. Multiplication Table\n";
    //Data output
    //  Como solo nos pide la tabla del 10, por eso opte por poner 10 en lugar de pedir el numero.
    multiplication(10);
}
*/
/*/*
Your job is to write a program that reads integers from
the standard input, sorts them into ascending order, and
then prints the sorted numbers, one per line.
*/

#include<iostream>
#include<stdlib.h>

using namespace std;

int ascending(int num)
{
    cout<<"|||  CADENA  |||"<<endl;
    int order[num],aux;

    //Para automatizar la lista, agregue "rand()" para asignar valores a los elementos de la lista.
    for(int i{0};i<num;i++){
        //Aqui defino el rango del rand()
        order[i] = rand();
        //rand() asignara a order[i] un numero aleatorio entre 0 a 1000
        order[i] = rand()%1000;
        //Output of list order[i]
        cout<<order[i]<<"\t";
    }
    cout<<endl;

    //Aqui se ordernan de forma ascendente
    cout<<"\n||| ASCENDENTE |||"<<endl;
    for(int i{1};i<=num;i++){
        for(int j{num};j>=i;j--){
            //Para el ordenamiento usa el metodo Burbuja
            if(order[j-1]>order[j]){
                aux = order[j-1];
                order[j-1] = order[j];
                order[j] = aux;
            }
        }
    }
    for(int i{0};i<num;i++){
        cout<<order[i]<<"\t";
    }
    cout<<endl;
}

int main()
{
    int num;
    cout<<"|||\t EXERCISE \t|||\n";
    cout<<"3. Ascending Order\n";
    cout<<"Tamanio de la lista: ";cin>>num;
    //Data output
    ascending(num);

}*/
